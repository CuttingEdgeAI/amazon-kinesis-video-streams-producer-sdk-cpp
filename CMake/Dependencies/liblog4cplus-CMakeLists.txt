cmake_minimum_required(VERSION 2.8)
find_program(MAKE_EXE NAMES make)

project(log4cplus-download NONE)

SET(CONFIGURE_COMMAND ${CMAKE_CURRENT_BINARY_DIR}/build/src/project_log4cplus/configure "CFLAGS=${CMAKE_C_FLAGS}" --prefix=${OPEN_SRC_INSTALL_PREFIX})

if (DEFINED CMAKE_OSX_SYSROOT AND NOT CMAKE_OSX_SYSROOT STREQUAL "")
  set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -isysroot${CMAKE_OSX_SYSROOT}")
endif()

# On windows, at least, most projects will build in debug mode. If you intend to redistribute this lib with you project you
# will want the release build, which is linked to the proper runtime dependencies in windows.
set(LOG4CPLUS_BUILD_TYPE "Release")

include(ExternalProject)

if (WIN32)
  ExternalProject_Add(project_log4cplus
      GIT_REPOSITORY    https://github.com/log4cplus/log4cplus
      GIT_TAG           REL_1_2_2
      PREFIX            ${CMAKE_CURRENT_BINARY_DIR}/build
      TEST_COMMAND      ""
      CMAKE_ARGS        -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=${OPEN_SRC_INSTALL_PREFIX} -DLOG4CPLUS_BUILD_TESTING=0 -DLOG4CPLUS_BUILD_LOGGINGSERVER=0 -DUNICODE=0
      BUILD_COMMAND     cmake --build . --config "${LOG4CPLUS_BUILD_TYPE}"
      INSTALL_COMMAND   cmake --build . --config "${LOG4CPLUS_BUILD_TYPE}" --target install
  )
else()
  ExternalProject_Add(project_log4cplus
       GIT_REPOSITORY    https://github.com/log4cplus/log4cplus
       GIT_TAG           REL_1_2_2
       PREFIX            ${CMAKE_CURRENT_BINARY_DIR}/build
       CONFIGURE_COMMAND ${CONFIGURE_COMMAND}
       BUILD_COMMAND     ${MAKE_EXE}
       BUILD_IN_SOURCE   TRUE
       INSTALL_COMMAND   ${MAKE_EXE} install
       TEST_COMMAND      ""
  )
endif()
